name: Publish Release

on:
  workflow_call:
    inputs:
      slack-channel:
        required: false
        type: string
        default: 'metamask-snaps-deployments'
      slack-icon-url:
        required: false
        type: string
        default: 'https://raw.githubusercontent.com/MetaMask/action-npm-publish/main/robo.png'
      slack-subteam:
        required: false
        type: string
      slack-username:
        required: false
        type: string
        default: 'MetaMask bot'
    secrets:
      NPM_TOKEN:
        required: true
      PUBLISH_PAGES_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  get-release-tag:
    name: Get release tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-release-tag.outputs.tag }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
      - name: Get release tag
        id: get-release-tag
        run: echo "tag=$(yarn get-release-tag)" >> "$GITHUB_OUTPUT"
        shell: bash

  publish-release:
    name: Publish release
    needs: get-release-tag
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
      - name: Publish release to GitHub
        uses: MetaMask/action-publish-release@v3
        id: publish-release
        with:
          npm-tag: ${{ needs.get-release-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          yarn install --immutable
          yarn build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: publish-release-artifacts-${{ github.sha }}
          include-hidden-files: true
          retention-days: 4
          path: |
            ./packages/**/dist
            ./node_modules/.yarn-state.yml

  npm-publish-dry-run:
    name: Publish to NPM (dry run)
    runs-on: ubuntu-latest
    needs: publish-release
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
      - name: Restore build artifacts
        uses: actions/download-artifact@v4
        with:
          name: publish-release-artifacts-${{ github.sha }}
      - name: Dry run publish to NPM
        uses: MetaMask/action-npm-publish@v5
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          subteam: ${{ inputs.slack-subteam }}
          channel: metamask-snaps-deployments

  npm-publish:
    name: Publish to NPM
    environment: npm-publish
    runs-on: ubuntu-latest
    needs:
      - npm-publish-dry-run
      - get-release-tag
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
      - name: Restore build artifacts
        uses: actions/download-artifact@v4
        with:
          name: publish-release-artifacts-${{ github.sha }}
      - name: Publish ${{ needs.get-release-tag.outputs.tag }} to NPM
        uses: MetaMask/action-npm-publish@v5
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}
          npm-tag: ${{ needs.get-release-tag.outputs.tag }}

  is-environment-release:
    name: Determine whether this release updates the iframe execution environment
    runs-on: ubuntu-latest
    needs: publish-release
    outputs:
      IS_ENVIRONMENT_RELEASE: ${{ steps.is-environment-release.outputs.IS_ENVIRONMENT_RELEASE }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
          fetch-depth: 2
      - name: Check if this is an environment release
        id: is-environment-release
        shell: bash
        run: ./scripts/is-release.sh "packages/snaps-execution-environments/package.json" "${{ github.event.before }}" "IS_ENVIRONMENT_RELEASE"
      - name: Set output
        if: steps.is-environment-release.outputs.IS_ENVIRONMENT_RELEASE == 'true'
        run: echo "IS_ENVIRONMENT_RELEASE=true" >> "$GITHUB_OUTPUT"

  configure-environment-publish:
    name: Configure iframe execution environment release
    runs-on: ubuntu-latest
    needs: is-environment-release
    if: needs.is-environment-release.outputs.IS_ENVIRONMENT_RELEASE == 'true'
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
      - id: version
        name: Get release version
        shell: bash
        run: |
          VERSION=$(jq --raw-output '.version' packages/snaps-execution-environments/package.json)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
      - id: name-version
        name: Get Slack name and version
        shell: bash
        if: inputs.slack-subteam != ''
        run: |
          NAME_VERSION_TEXT=$(jq --raw-output '.name + "@" + .version' packages/snaps-execution-environments/package.json)
          NAME_VERSION_TEXT_STRIPPED="${NAME_VERSION_TEXT#@}"
          echo "NAME_VERSION=$NAME_VERSION_TEXT_STRIPPED" >> "$GITHUB_OUTPUT"
      - id: final-text
        name: Get Slack final text
        shell: bash
        if: inputs.slack-subteam != ''
        run: |
          DEFAULT_TEXT="\`${{ steps.name-version.outputs.NAME_VERSION }}\` is awaiting deployment :rocket: \n <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/|â†’ Click here to review deployment>"
          SUBTEAM_TEXT="${{ inputs.slack-subteam }}"
          FINAL_TEXT="$DEFAULT_TEXT"
          if [[ ! "$SUBTEAM_TEXT" == "" ]]; then
            FINAL_TEXT="<!subteam^$SUBTEAM_TEXT> $DEFAULT_TEXT"
          fi
          echo "FINAL_TEXT=$FINAL_TEXT" >> "$GITHUB_OUTPUT"
      - name: Post to a Slack channel
        if: inputs.slack-subteam != ''
        uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844
        with:
          payload: |
            {
              "text": "${{ steps.final-text.outputs.FINAL_TEXT }}",
              "icon_url": "${{ inputs.slack-icon-url }}",
              "username": "${{ inputs.slack-username }}",
              "channel": "#${{ inputs.slack-channel }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  publish-environment:
    name: Publish iframe execution environment
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/publish-environment.yml
    needs:
      - is-environment-release
      - configure-environment-publish
    if: needs.is-environment-release.outputs.IS_ENVIRONMENT_RELEASE == 'true'
    with:
      destination_dir: ${{ needs.configure-environment-publish.outputs.version }}

  is-test-snaps-release:
    name: Determine whether this release updates test snaps
    runs-on: ubuntu-latest
    needs: publish-release
    outputs:
      IS_TEST_SNAPS_RELEASE: ${{ steps.set-output.outputs.IS_TEST_SNAPS_RELEASE }}
      TEST_SNAPS_VERSION: ${{ steps.set-output.outputs.TEST_SNAPS_VERSION }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: true
          ref: ${{ github.sha }}
          fetch-depth: 2
      - name: Check if this is a test snaps release
        id: is-test-snaps-release
        shell: bash
        run: ./scripts/is-release.sh "packages/test-snaps/package.json" "${{ github.event.before }}" "IS_TEST_SNAPS_RELEASE"
      - name: Set output
        id: set-output
        if: steps.is-test-snaps-release.outputs.IS_TEST_SNAPS_RELEASE == 'true'
        run: |
          echo "IS_TEST_SNAPS_RELEASE=true" >> "$GITHUB_OUTPUT"
          echo "TEST_SNAPS_VERSION=$(jq --raw-output '.version' packages/test-snaps/package.json)" >> "$GITHUB_OUTPUT"

  publish-test-snaps:
    name: Publish test snaps
    needs: is-test-snaps-release
    if: ${{ needs.is-test-snaps-release.outputs.IS_TEST_SNAPS_RELEASE == 'true' }}
    permissions:
      contents: write
    uses: ./.github/workflows/publish-github-pages.yml
    with:
      build_script: yarn workspace @metamask/test-snaps build
      destination_dir: test-snaps/${{ needs.is-test-snaps-release.outputs.TEST_SNAPS_VERSION }}
      publish_dir: ./packages/test-snaps/dist
    secrets:
      PUBLISH_PAGES_TOKEN: ${{ secrets.PUBLISH_PAGES_TOKEN }}

  publish-test-snaps-latest:
    name: Publish test snaps to `latest` folder
    needs: is-test-snaps-release
    if: ${{ needs.is-test-snaps-release.outputs.IS_TEST_SNAPS_RELEASE == 'true' }}
    permissions:
      contents: write
    uses: ./.github/workflows/publish-github-pages.yml
    with:
      build_script: yarn workspace @metamask/test-snaps build
      destination_dir: test-snaps/latest
      publish_dir: ./packages/test-snaps/dist
    secrets:
      PUBLISH_PAGES_TOKEN: ${{ secrets.PUBLISH_PAGES_TOKEN }}
