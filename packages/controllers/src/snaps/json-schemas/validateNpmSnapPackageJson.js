"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"title":"npm Snap package.json","type":"object","required":["version","name"],"properties":{"version":{"type":"string","pattern":"^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"},"name":{"type":"string","minLength":1,"maxLength":214},"repository":{"type":"object","additionalProperties":false,"required":["type","url"],"properties":{"type":{"type":"string","enum":["git"]},"url":{"type":"string","minLength":1}}}}};const pattern0 = new RegExp("^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$", "u");const func8 = require("ajv/dist/runtime/ucs2length").default;const func0 = require("ajv/dist/runtime/equal").default;function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.version === undefined) && (missing0 = "version")) || ((data.name === undefined) && (missing0 = "name"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(!pattern0.test(data0)){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/pattern",keyword:"pattern",params:{pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"},message:"must match pattern \""+"^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){let data1 = data.name;const _errs3 = errors;if(errors === _errs3){if(typeof data1 === "string"){if(func8(data1) > 214){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/maxLength",keyword:"maxLength",params:{limit: 214},message:"must NOT have more than 214 characters"}];return false;}else {if(func8(data1) < 1){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.repository !== undefined){let data2 = data.repository;const _errs5 = errors;if(errors === _errs5){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.type === undefined) && (missing1 = "type")) || ((data2.url === undefined) && (missing1 = "url"))){validate20.errors = [{instancePath:instancePath+"/repository",schemaPath:"#/properties/repository/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs7 = errors;for(const key0 in data2){if(!((key0 === "type") || (key0 === "url"))){validate20.errors = [{instancePath:instancePath+"/repository",schemaPath:"#/properties/repository/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs7 === errors){if(data2.type !== undefined){let data3 = data2.type;const _errs8 = errors;if(typeof data3 !== "string"){validate20.errors = [{instancePath:instancePath+"/repository/type",schemaPath:"#/properties/repository/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data3 === "git")){validate20.errors = [{instancePath:instancePath+"/repository/type",schemaPath:"#/properties/repository/properties/type/enum",keyword:"enum",params:{allowedValues: schema22.properties.repository.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data2.url !== undefined){let data4 = data2.url;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(func8(data4) < 1){validate20.errors = [{instancePath:instancePath+"/repository/url",schemaPath:"#/properties/repository/properties/url/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/repository/url",schemaPath:"#/properties/repository/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/repository",schemaPath:"#/properties/repository/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}