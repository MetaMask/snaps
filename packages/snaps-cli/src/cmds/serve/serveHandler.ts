import http from 'http';
import serveHandler from 'serve-handler';
import { validateDirPath } from '@metamask/snap-utils';
import { YargsArgs } from '../../types/yargs';
import { logRequest, logServerError, logServerListening } from './serveUtils';

/**
 * Starts a local, static HTTP server on the given port with the given root
 * directory.
 *
 * @param argv - Arguments as an object generated by Yargs.
 * @param argv.root - The root directory path string.
 * @param argv.port - The server port.
 */
export async function serve(argv: YargsArgs): Promise<void> {
  const { port, root: rootDir } = argv;

  await validateDirPath(rootDir as string, true);

  console.log(`\nStarting server...`);

  const server = http.createServer(async (req, res) => {
    await serveHandler(req, res, {
      public: rootDir as string,
      headers: [
        {
          source: '**/*',
          headers: [
            {
              key: 'Cache-Control',
              value: 'no-cache',
            },
            {
              key: 'Access-Control-Allow-Origin',
              value: '*',
            },
          ],
        },
      ],
    });
  });

  server.listen({ port }, () => logServerListening(port));

  server.on('request', (request) => logRequest(request));

  server.on('error', (error) => {
    logServerError(error, argv.port);
    process.exitCode = 1;
  });

  server.on('close', () => {
    console.log('Server closed');
    process.exitCode = 1;
  });
}
