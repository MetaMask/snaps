// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getDefaultConfiguration returns the default Webpack configuration for the given CLI config 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.js",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/foo/bar",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/foo/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    undefined,
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the given CLI config 2`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/bar/baz",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/bar/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    undefined,
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the given CLI config 3`] = `
{
  "devtool": "inline-source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/bar/baz",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/bar/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    undefined,
    SnapsBuiltInResolverPlugin {},
    false,
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the given CLI config 4`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/bar/baz",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/bar/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "FOO": "bar",
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "FOO",
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    undefined,
    false,
    false,
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      false,
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the options {
  evaluate: true,
  watch: true,
  spinner: MockSpinner {
    isSpinning: true,
    start: <ref *1> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *1] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    },
    succeed: <ref *2> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *2] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    },
    fail: <ref *3> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *3] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    },
    stop: <ref *4> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *4] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    },
    clear: <ref *5> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *5] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    },
    frame: <ref *6> [Function: mockConstructor] {
      [length]: 0,
      [name]: 'mockConstructor',
      [prototype]: { [constructor]: [Circular *6] },
      _isMockFunction: true,
      getMockImplementation: [Function (anonymous)] { [length]: 0, [name]: '' },
      mock: [Getter/Setter],
      mockClear: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReset: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockRestore: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockReturnValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValueOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockResolvedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockRejectedValue: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockImplementationOnce: [Function (anonymous)] { [length]: 1, [name]: '' },
      withImplementation: [Function: bound withImplementation] {
        [length]: 2,
        [name]: 'bound withImplementation'
      },
      mockImplementation: [Function (anonymous)] { [length]: 1, [name]: '' },
      mockReturnThis: [Function (anonymous)] { [length]: 0, [name]: '' },
      mockName: [Function (anonymous)] { [length]: 1, [name]: '' },
      getMockName: [Function (anonymous)] { [length]: 0, [name]: '' }
    }
  }
} 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/dist",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    SnapsWatchPlugin {},
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the options { evaluate: false, watch: false } 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/dist",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": false,
        "manifestPath": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    false,
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the options { evaluate: false, watch: true } 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/dist",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": false,
        "manifestPath": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    SnapsWatchPlugin {},
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the options { evaluate: true, watch: false } 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/dist",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    false,
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;

exports[`getDefaultConfiguration returns the default Webpack configuration for the options { evaluate: true, watch: true } 1`] = `
{
  "devtool": "source-map",
  "entry": "src/index.ts",
  "infrastructureLogging": {
    "level": "none",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "exclude": /node_modules/u,
        "test": /\\\\\\.tsx\\?\\$/u,
        "use": {
          "loader": "swc-loader",
          "options": {
            "jsc": {
              "parser": {
                "syntax": "typescript",
              },
              "target": "es2020",
            },
            "module": {
              "type": "commonjs",
            },
            "sourceMaps": true,
          },
        },
      },
    ],
  },
  "optimization": {
    "minimizer": [
      TerserPlugin {
        "options": {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": {
            "implementation": [Function],
            "options": {},
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
    ],
  },
  "output": {
    "clean": false,
    "filename": "bundle.js",
    "library": {
      "type": "commonjs",
    },
    "path": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/dist",
    "publicPath": "/",
  },
  "plugins": [
    SnapsWebpackPlugin {
      "options": {
        "eval": true,
        "manifestPath": "/Users/morten/Development/MetaMask/snaps-monorepo/packages/snaps-cli/snap.manifest.json",
        "writeManifest": true,
      },
    },
    SnapsStatsPlugin {},
    EnvironmentPlugin {
      "defaultValues": {
        "DEBUG": false,
        "NODE_DEBUG": false,
        "NODE_ENV": "production",
      },
      "keys": [
        "NODE_DEBUG",
        "NODE_ENV",
        "DEBUG",
      ],
    },
    ProgressPlugin {
      "dependenciesCount": 10000,
      "handler": [Function],
      "modulesCount": 5000,
      "percentBy": undefined,
      "profile": false,
      "showActiveModules": false,
      "showDependencies": true,
      "showEntries": true,
      "showModules": true,
    },
    SnapsWatchPlugin {},
    SnapsBuiltInResolverPlugin {},
    SnapsBundleWarningsPlugin {},
  ],
  "resolve": {
    "extensions": [
      ".js",
      ".ts",
    ],
    "fallback": {
      "_http_agent": false,
      "_http_client": false,
      "_http_common": false,
      "_http_incoming": false,
      "_http_outgoing": false,
      "_http_server": false,
      "_stream_duplex": false,
      "_stream_passthrough": false,
      "_stream_readable": false,
      "_stream_transform": false,
      "_stream_wrap": false,
      "_stream_writable": false,
      "_tls_common": false,
      "_tls_wrap": false,
      "assert": false,
      "assert/strict": false,
      "async_hooks": false,
      "buffer": false,
      "child_process": false,
      "cluster": false,
      "console": false,
      "constants": false,
      "crypto": false,
      "dgram": false,
      "diagnostics_channel": false,
      "dns": false,
      "dns/promises": false,
      "domain": false,
      "events": false,
      "fs": false,
      "fs/promises": false,
      "http": false,
      "http2": false,
      "https": false,
      "inspector": false,
      "module": false,
      "net": false,
      "os": false,
      "path": false,
      "path/posix": false,
      "path/win32": false,
      "perf_hooks": false,
      "process": false,
      "punycode": false,
      "querystring": false,
      "readline": false,
      "readline/promises": false,
      "repl": false,
      "stream": false,
      "stream/consumers": false,
      "stream/promises": false,
      "stream/web": false,
      "string_decoder": false,
      "sys": false,
      "timers": false,
      "timers/promises": false,
      "tls": false,
      "trace_events": false,
      "tty": false,
      "url": false,
      "util": false,
      "util/types": false,
      "v8": false,
      "vm": false,
      "worker_threads": false,
      "zlib": false,
    },
    "plugins": [
      SnapsBuiltInResolver {
        "unresolvedModules": Set {},
      },
    ],
  },
  "stats": "none",
  "target": "web",
}
`;
