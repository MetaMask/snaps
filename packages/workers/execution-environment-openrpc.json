{
  "openrpc": "1.2.4",
  "info": {
    "title": "MetaMask Snaps Execution Environment API",
    "version": "0.0.0-development"
  },
  "methods": [
    {
      "name": "handshake",
      "description": "confirms that a connection has been established with the execution environment",
      "params": [],
      "result": {
        "name": "HandshakeResult",
        "schema": {
          "$ref": "#/components/schemas/OK"
        }
      }
    },
    {
      "name": "executePlugin",
      "description": "executes a plugin in the environment",
      "params": [
        {
          "name": "Plugin",
          "description": "a plugins source code gets executed in the environment, and can be interacted with via `pluginRpc`",
          "schema": {
            "type": "object",
            "properties": {
              "pluginName": {
                "type": "string"
              },
              "sourceCode": {
                "type": "string"
              }
            }
          }
        }
      ],
      "result": {
        "name": "executePluginResult",
        "schema": {
          "$ref": "#/components/schemas/OK"
        }
      },
      "examples": [
        {
          "name": "BasicTestPluginExecuteExample",
          "params": [
            {
              "name": "executePlugin",
              "value": {
                "pluginName": "TestPlugin",
                "sourceCode": "wallet.registerRpcMessageHandler(async (_, request) => { return request.method + request.id })"
              }
            }
          ],
          "result": {
            "name": "BasicTestPluginExampleResult",
            "value": "OK"
          }
        }
      ]
    },
    {
      "name": "pluginRpc",
      "params": [
        {
          "name": "PluginRpcRequest",
          "schema": {
            "type": "object",
            "properties": {
              "origin": {
                "description": "Origin of the plugin JSON-RPC request",
                "type": "string"
              },
              "request": {
                "description": "JSON-RPC request object to pass through to the plugin",
                "type": "object",
                "properties": {
                  "jsonrpc": {
                    "type": "string",
                    "const": "2.0"
                  },
                  "id": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "method": {
                    "description": "the name of the plugin method",
                    "type": "string"
                  },
                  "params": {
                    "oneOf": [
                      {
                        "type": "array"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "target": {
                "title": "PluginName",
                "description": "Plugin name to target with the JSON-RPC request",
                "type": "string"
              }
            }
          }
        }
      ],
      "result": {
        "name": "HandlePluginRpcResult",
        "schema": {
          "type": "object",
          "properties": {
            "result": true,
            "error": true
          }
        }
      },
      "examples": [
        {
          "name": "TestPluginExample",
          "params": [
            {
              "name": "PluginRpcRequest",
              "value": {
                "origin": "foo.com",
                "request": {
                  "method": "hello",
                  "params": [],
                  "id": 1
                },
                "target": "TestPlugin"
              }
            }
          ],
          "result": {
            "name": "TestPluginResultExample",
            "value": {
              "jsonrpc": "2.0",
              "id": 1,
              "result": "hello1"
            }
          }
        }
      ]
    }
  ],
  "components": {
    "schemas": {
      "OK": {
        "type": "string",
        "const": "OK"
      }
    }
  }
}
