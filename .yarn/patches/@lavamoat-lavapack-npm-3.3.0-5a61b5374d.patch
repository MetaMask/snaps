diff --git a/src/runtime.js b/src/runtime.js
index 97c9ddb9b76a2fe31cf9b202cb491f15232232ff..f7f66db9e16d58e2f50bae9491eae88bc605a398 100644
--- a/src/runtime.js
+++ b/src/runtime.js
@@ -10831,6 +10831,10 @@ function makeGetEndowmentsForConfig ({ createFunctionWrapper }) {
 function getPropertyDescriptorDeep (target, key) {
   let receiver = target
   while (true) {
+    // abort if this is the end of the prototype chain.
+    if (!receiver) {
+      return { prop: null, receiver: null }
+    }
     // support lookup on objects and primitives
     const typeofReceiver = typeof receiver
     if (typeofReceiver === 'object' || typeofReceiver === 'function') {
@@ -10845,10 +10849,6 @@ function getPropertyDescriptorDeep (target, key) {
       // eslint-disable-next-line no-proto
       receiver = receiver.__proto__
     }
-    // abort if this is the end of the prototype chain.
-    if (!receiver) {
-      return { prop: null, receiver: null }
-    }
   }
 }
 
@@ -11384,7 +11384,9 @@ module.exports = {
         const descriptors = Object.getOwnPropertyDescriptors(source)
         Object.values(descriptors).forEach(desc => {
           if ('get' in desc) {
-            Reflect.apply(desc.get, globalRef, [])
+            try {
+              Reflect.apply(desc.get, globalRef, [])
+            }catch{}
           }
         })
       })
@@ -11556,6 +11558,17 @@ module.exports = {
 
 
   function loadModuleData (moduleId) {
+    if (typeof window === 'undefined' && require('node:module').isBuiltin(moduleId)) {
+      return {
+        type: 'builtin',
+        package: moduleId,
+        id: moduleId,
+        // Using unprotected require
+        moduleInitializer: (_, module) => {
+          module.exports = require(moduleId);
+        },
+      }
+    }
     if (!moduleRegistry.has(moduleId)) {
       throw new Error(`no module registered for "${moduleId}" (${typeof moduleId})`)
     }
